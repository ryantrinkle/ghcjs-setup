#!/usr/bin/env bash
set -eu

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

REPO="https://github.com/ryantrinkle/ghcjs-setup"

trap "echo 'It looks like a problem occurred.  Please submit an issue at https://github.com/ryantrinkle/ghcjs-setup/issues and we'\\''ll look into it right away'; exit 1" ERR

echo "If you have any trouble with this script, please submit an issue at $REPO/issues"

(

cd "$DIR"

if [ ! -d /nix ] ; then
  if ! type -P curl >/dev/null ; then
    echo "Please make sure that 'curl' is installed and can be run from this shell"
    exit 1
  fi

  echo "Installing Nix"
  ./installNix.sh
fi

)

if ! type -P nix-shell >/dev/null ; then
  . ~/.nix-profile/etc/profile.d/nix.sh
  if ! type -P nix-shell >/dev/null ; then
    echo "It looks like Nix isn't working.  Please make sure you can run nix-shell, then retry the $0, or submit an issue at $REPO/issues"
    exit 1
  fi
fi

(

cd "$DIR"


if ! type -P git ; then
  echo "Please make sure that 'git' is installed and can be run from this shell"
  exit 1
fi

for x in nixpkgs ; do
  if [ ! "$(ls -A "$x")" ] ; then

    echo "Getting ghcjs build scripts"
    git submodule update --init --recursive "$x"
  fi
done

)

INFO=$(cat <<"EOF"

You are now in a shell with access to ghcjs.  You can verify that ghcjs is configured correctly with:
$ ghcjs --version
The Glorious Glasgow Haskell Compilation System for JavaScript, version 0.1.0 (GHC 7.8.3)

To build a basic program with ghcjs, do:
$ echo 'main = putStrLn \"Hello, world!\"' > helloWorld.hs
$ ghcjs helloWorld.hs
$ node helloWorld.jsexe/all.js
EOF
)

echo "Entering the ghcjs/nodejs sandbox; this may take several hours the first time you run it"
nix-shell "$DIR/shell.nix" --option extra-binary-caches https://ryantrinkle.com:5443/ -j 8 --pure --command "echo \"$INFO\" ; return" "$@"
